=== Distributed nature

Elasticsearch is distributed by nature.  While it happily ran the tutorial
on a single node living inside your laptop, it is designed to scale out to
hundreds (or even thousands!) of machines.  If you were to rerun
the tutorial, but this time start five nodes on your laptop, it would work
just fine.

The distributed aspect of Elasticsearch is largely transparent.  Nothing in the
tutorial required you to know about distributed systems, sharding, cluster
discovery or dozens of other distributed concepts.  

Elasticsearch tries hard to hide the complexity of distributed systems. Some of 
the operations happening automatically under the hood include:

 * Partitioning your documents into different containers or _shards_, which
   can be stored on a single node or on  multiple nodes.

 * Balancing these shards across the nodes in your cluster to spread the
   indexing and search load.

 * Duplicating each shard to provide redundant copies of your data, to
   prevent data loss in case of hardware failure.

 * Routing requests from any node in the cluster to the nodes that hold the
   data you're interested in.

 * Seamlessly integrating new nodes as your cluster grows or redistributing
   shards to recover from node loss.

As you read through this book, you'll encounter supplemental chapters about the
distributed nature of Elasticsearch.  These chapters will teach you about
how the cluster scales and deals with failover (<<distributed-cluster>>),
handles document storage (<<distributed-docs>>) and executes distributed search
(<<distributed-search>>).

These chapters are not required reading -- you can use Elasticsearch without
understanding these internals -- but they will provide insight that will make
your knowledge of Elasticsearch more complete. Feel free to skim them and
revisit at a later point when you need a more complete understanding.

