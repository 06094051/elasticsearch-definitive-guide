
Partial matching is an enormously powerful tool.  A keen observer will notice that all the queries so far in this book have operated on whole terms.  To match something, the smallest "unit" had to be an exact term.

But what happens if you want to match parts of a term but not the whole thing? There are many reasons why you may only want to match parts of a word: perhaps there are mispellings or multiple spellings available, or you wish to implement "as-you-type" autocompletion.

Whatever the reason, Elasticsearch offers a number of ways to tackle the partial-matching problem.

.A word of warning
****
Before we proceed, it is good to understand that partial matching techniques are often expensive.  You always pay a price for the flexibility that partial matching provides - either at query-time with increased computational overhead, or at index-time with increased disk consumption.

The partial matching capabilities that Elasticsearch provides are fast, especially when viewed in the light of searching millions of documents.  But relative to other, non-partial queries, partial matching is definitely slower.

Carefully consider where you need partial matching and if there is a different way to achieve the same results without the performance hit of partial matching.
****