=== Multi-document patterns

The patterns for the `mget` and `bulk` APIs are similar to those for
individual documents. The difference is that the requesting node knows in
which shard each document lives. It breaks up the multi-document request into
a multi-document request _per shard_, and forwards these in parallel to each
participating node.

Once it receives answers from each node, it collates their responses
into a single response, which it returns to the client.

The pattern for the `mget` API is depicted in <<img-distrib-mget>>.

[[img-distrib-mget]]
.Retrieving multiple documents with `mget`
image::images/distrib_mget.svg["Retrieving multiple documents with mget"]

1. The client sends an `mget` request to `Node_1`.

2. `Node 1` builds a multi-get request per shard, and forwards these
   requests in parallel to the nodes hosting each required primary or replica
   shard. Once all replies have been received, `Node 3` builds the response
   and returns it to the client.

A `routing` parameter can be set for each document in the `docs` array,
and the `preference` parameter can be set for the top-level `mget`
request.

The pattern for the `bulk` API is depicted in <<img-distrib-bulk>>.

[[img-distrib-bulk]]
.Multiple document changes with `bulk`
image::images/distrib_bulk.svg["Multiple document changes with bulk"]

1. The client sends a `bulk` request to `Node_1`.

2. `Node 1` builds a bulk request per shard, and forwards these requests in
    parallel to the nodes hosting each involved primary shard.

3. Once a request has been executed successfully on a primary shard, it is
   forwarded in parallel to its replica shards on the other nodes. Once all
   replica shards report success, the node reports success to the requesting
   node, which collates the responses and returns them to the client.

The `bulk` API also accepts the `replication` and `consistency` parameters
at the top-level for the whole `bulk` request, and the `routing` parameter
in the metadata for each request.


