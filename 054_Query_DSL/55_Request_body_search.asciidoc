Search _lite_ -- <<search-lite,query string search>> --  is useful for _ad
hoc_ queries from the command line. To harness the full power of search,
however, you should use the _request body_ `search` API, so called because
most parameters are passed in the JSON request body instead of in the query
string.

Request body search -- henceforth known just as ``search'' -- not only handles
the query itself, but also allows you to return highlighted snippets from your
results, aggregate analytics across all results or subsets of results, and
return _did-you-mean?_ suggestions, which will help guide your users to the
best results quickly.

=== Empty search

Let's start with the simplest form of the `search` API, the empty search,
which returns all documents in all indices.

[source,js]
--------------------------------------------------
GET /_search
{} <1>
--------------------------------------------------
// SENSE: 054_Query_DSL/60_Empty_query.json
<1> This is an empty request body.

Just as with query-string search, you can search on one, many or `_all`
indices, and one, many or all types:

[source,js]
--------------------------------------------------
GET /index_2014*/type1,type2/_search
{}
--------------------------------------------------

And you can use the `from` and `size` parameters for pagination:

[source,js]
--------------------------------------------------
GET /_search
{
    "from": 30,
    "size": 10
}
--------------------------------------------------


[TIP]
====

Some languages, such as JavaScript, don't allow request bodies with a `GET`
request. For this reason, the `search` API can also be used as a `POST`
request:

[source,js]
--------------------------------------------------
POST /_search
{
    "from": 30,
    "size": 10
}
--------------------------------------------------
====

We will talk about <<TODO,highlighting_matches>>, <<aggregations>>, and
<<TODO,did_you_mean>> suggestions in later chapters. For now, we're going to
focus just on the query.

Instead of the cryptic query-string approach, request body search allows us
to write queries using the _Query Domain Specific Language_, or Query DSL.

