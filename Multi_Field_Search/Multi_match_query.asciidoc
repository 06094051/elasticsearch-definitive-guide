=== `multi_match` query

The `multi_match` query provides us with a convenient shorthand way of running
the same query against multiple fields. It generates a `match` query for each field
and, by default, wraps them in a `dis_max` query.

This `dis_max` query:

[source,js]
--------------------------------------------------
{
    "dis_max": {
        "queries":  [
            {
                "match": {
                    "title": {
                        "query": "Quick brown fox",
                        "minimum_should_match": "30%"
                    }
                }
            },
            {
                "match": {
                    "body": {
                        "query": "Quick brown fox",
                        "minimum_should_match": "30%"
                    }
                }
            },
        ],
        "tie_breaker": 0.3
    }
}
--------------------------------------------------

could be rewritten more concisely with `multi_match`:

[source,js]
--------------------------------------------------
{
    "multi_match": {
        "query":                "Quick brown fox",
        "minimum_should_match": "30%", <1>
        "fields":               [ "title", "body" ]
        "tie_breaker":          0.3
    }
}
--------------------------------------------------
<1> Parameters like `minimum_should_match` or `operator` are passed through to
    the generated `match` queries.

Fieldnames can be specified with wildcards -- any field which matches the
wildcard pattern will be included in the search. You could match on the
`title`, `first_name`, `middle_name` and `last_name` fields, with the
following:

[source,js]
--------------------------------------------------
{
    "multi_match": {
        "query":  "Mary Smith",
        "fields": [ "title", "*_name" ]
    }
}
--------------------------------------------------

Individual fields can be boosted using the caret (`^`) syntax: just add `^boost` after the field name, where `boost` is a
floating point number:

[source,js]
--------------------------------------------------
{
    "multi_match": {
        "query":  "Brown fox",
        "fields": [ "title^2", "body" ] <1>
    }
}
--------------------------------------------------

<1> The `title` field has a `boost` of 2, while the `body` field has the
    default boost of 1.
