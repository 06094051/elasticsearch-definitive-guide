==== Metadata: Document identity

There are four metadata fields associated with document identity:

[horizontal]
`_id`::    The string ID of the document.
`_type`::  The type name of the document.
`_index`:: The index where the document lives.
`_uid`::   The `_type` and `_id` concatenated together as `"type#id"`

By default, the `_uid` field is stored (can be retrieved) and
indexed (searchable).  The `_type` field is indexed but not stored,
and the `_id` and `_index` fields are neither indexed nor stored, meaning
they don't really exist.

In spite of this, you can query the `_id` field as though it were a real
field.  Elasticsearch uses the `_uid` field to derive the '_id'. While you
can change the `index` and `store` settings for these fields, you almost
never need to do so.

The `_id` field does have one setting that you may want to use: the `path`
setting tells Elasticsearch that it should extract the value for the
document `_id` from a field in the document itself.

    curl -XPUT localhost:9200/my_index -d '
    {
        "mappings": {
            "my_type": {
                "_id": {
                    "path": "doc_id"
                },
                "properties": {
                    "doc_id": {
                        "type":   "string",
                        "index":  "not_analyzed"
                    }
                }
            }
        }
    }
    '

Then, when you index a document:

    curl -XPOST localhost:9200/my_index/my_type -d '
    {
        "doc_id": "123"
    }
    '

the `_id` value will be extracted from the `doc_id` field in the document
itself:

    {
        "ok":       true,
        "_index":   "my_index",
        "_type":    "my_type",
        "_id":      "123",
        "_version": 1
    }

While this is very convenient, be aware that it has a slight performance
impact on `bulk` requests (see <<bulk-format>>). The node handling
the request can no longer make use of the optimized bulk format to
parse only the metadata line in order to decide which shard should receive the
request. Instead, it has to parse the document body itself.



