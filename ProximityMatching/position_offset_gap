
If you have multipe values for a single field, there are some extra precautions that you should take to ensure that your phrase searches return reasonable results.

For example, consider this document:

    {
        "names" : [ "xxx yyy", "zzz" ]
    }

If you search for "xxx zzz", you would not expect this document to be returned.  However, this document will be a match.  Why?

Lucene tokenizes the first value like this:

- [xxx] at position 1
- [zzz] at position 2

It then tokenizes the second value as:

- [zzz] at position 1

Now when you search for the phrase "xxx zzz" you get a match because both [xxx] and [zzz] are at position 1 and no edits are needed to finish the match.  Whoops!

The solution to this problem is to include `position_offset_gap` in your mapping:

    {
        "mappings" : {
            "type" : {
                "properties" : {
                    "names" : {
                        "type" : "string", 
                        "position_offset_gap" : 100
                    }
                }
            }
        }
    }

Each time a new value is encountered, the starting position is incremented by the configured amount (in this case 100).  With the above example, token [zzz] would have position 101 and the query would not match a phrase.

Make sure you set the offset gap to something sufficiently large - it should be larger than the longest conceivable piece of text.  If you don't set it high enough, you may overlap with long fields...and then you'll start getting _really_ strange results.