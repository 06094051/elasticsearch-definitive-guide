=== Document oriented

Objects in an application are seldom just a simple list of keys and values.
More often than not they are complex data structures which may contain other
objects, or arrays of values.

When using a relational database to store these objects, you flatten
the object to fit the table schema (usually one field per column). When
retrieving the object from the database, you have to reconstruct it
from the flat representation.

Elasticsearch is _document oriented_, meaning that it stores and
indexes entire _documents_.  In Elasticsearch, you index, search,
sort and filter documents...not rows of data.  This is a fundamentally different
 way of thinking about data and is one of the reasons Elasticsearch can
 perform complex full text search.


[NOTE]
====
Elasticsearch uses JSON as the serialization format for documents.

JSON serialization is supported by most programming languages, and has become
the standard format used by the NoSQL movement. It is simple, concise and easy
to read.

Consider this JSON document which represents a user object:

    {
        "email":     "john@smith.com",
        "name": {
            "first": "John",
            "last":  "Smith"
        },
        "bio":       "Eco-warrior and defender of the weak",
        "age":       25,
        "join_date": "2013/05/01",
        "interests": ["dolphins", "whales"]
    }

Although the original user object was complex, the
structure of the object has been retained in the JSON version.
Converting an object to JSON for indexing in Elasticsearch
is much simpler than the equivalent process for a flat table structure.
====

