=== Easy search

Now that our documents are indexed we can search for them.
For simple _ad hoc_ searches, we can use the _query string_ search
method:

    curl -XGET 'http://localhost:9200/_search?pretty&q=john'

The above query returns our document as a result, but what we have actually
searched?

Elasticsearch adds a magical `_all` field to our document, which contains
the values from all the other fields in the document.  By default, the
`q=keywords` query string search looks for matches in this `_all` field.

Alternatively, we can search against a specific field:

    curl -XGET 'http://localhost:9200/_search?pretty&q=name.first:john'

.Near real-time search
****
While documents can be retrieved immediately after being indexed
-- real-time GET -- they only become ``visible'' to search within 1 second of
being indexed or updated. This is known as  _near real-time search_.
****

=== Powerful search

While the query string search is useful for simple queries, we can use
the _Query DSL_ -- Elasticsearch's custom query language -- to express
more complex and specific queries in JSON:

    curl -XGET http://localhost:9200/_search?pretty -d '
    {
        "query": {
            "bool": {
                "must": { "match": { "name.first": "john" }},
                "should": [
                    { "match": { "interests": "whales" }},
                    { "match": { "bio": "eco warrior" }},
                    { "range": { "age": { "from": 20   }}}
                ]
            }
        }
    }
    '

Elasticsearch not only returns the list of which documents match, but also
returns the document itself. There is no need to have a separate phase to
fetch the matching documents from another datasource.

=== Snippet highlighting

The search API supports other related functionality, such as the ability
to return highlighted search snippets which show the search terms
in the context of the document:

    curl -XGET http://localhost:9200/_search?pretty -d '
    {
        "query": { "match": { "bio": "eco warrior" }},
        "highlight": {
            "fields": {
                "bio": {}
            }
        }
    }
    '

The above query returns snippets like:
``__Eco-warrior__ and defender of the weak''

